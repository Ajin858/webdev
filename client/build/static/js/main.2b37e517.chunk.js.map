{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducers.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","console","log","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunx","ReactDOM","render","document","querySelector"],"mappings":"6YAGaA,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACLC,IAAMC,IAAI,qBADL,OACjBC,EADiB,OAEtBJ,EAAS,CAAEK,KCLM,aDKWC,QAASF,EAAIG,OAFnB,2CAAN,uDAKZC,EAAc,SAACC,GAAD,8CAAW,WAAMT,GAAN,eAAAC,EAAA,sEACZC,IAAMQ,KAAK,cAAcD,GADb,OACxBL,EADwB,OAE7BJ,EAAS,CAAEK,KCVM,aDUWC,QAASF,EAAIG,OAFZ,2CAAX,uD,iBEHdI,EAAb,uKACc,IAAD,OACL,OACI,kBAAC,IAAD,CACEC,KAAM,SACNC,YAAa,mBACbC,OAAU,IACVL,MAAS,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACzCO,UAAaC,8CAEX,4BAAQC,UAAW,OAAnB,oBAVhB,GAA8BC,aAgBfC,cAAQ,KAAKC,EAAbD,CAAsBT,GChBxBW,EAAb,8KAEQ,OAAOC,KAAKR,MAAMS,MACd,KAAK,KACD,OACJ,KAAK,EACD,OAAO,4BAAI,uBAAGC,KAAO,gBAAV,uBACf,QACD,MAAO,CACJ,wBAAIC,IAAK,KAAI,kBAAC,EAAD,OACb,wBAAIA,IAAK,IAAIC,MAAS,CAACC,OAAQ,WAA/B,aACeL,KAAKR,MAAMS,KAAKK,SAE/B,wBAAIH,IAAK,KAAI,uBAAGD,KAAO,eAAV,eAb3B,+BAmBQ,OADAK,QAAQC,IAAIR,KAAKR,OAEb,6BACI,yBAAKG,UAAY,eACb,kBAAC,IAAD,CACEc,GAAKT,KAAKR,MAAMS,KAAO,WAAa,IACpCN,UAAY,mBAFd,UAMA,wBAAIA,UAAY,SACZK,KAAKU,uBA7B7B,GAA4Bd,aAyCbC,mBAJf,YACI,MAAO,CAACI,KADqB,EAAPA,QAIXJ,CAAyBE,GCjCzBY,EAXC,WACZ,OACI,yBAAKP,MAAS,CAAEQ,UAAY,WACxB,uCADJ,oCCGFC,EAAY,kBAAM,0CAClBC,EAAY,kBAAM,0CAGlBC,E,kLAEEf,KAAKR,MAAMhB,c,+BAKX,OACI,yBAAKmB,UAAY,aACb,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAO,IAAIC,UAAcP,IACtC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAO,WAAWC,UAAaL,IAC5C,kBAAC,IAAD,CAAOI,KAAO,eAAeC,UAAaJ,W,GAdhDlB,aAuBHC,cAAQ,KAAMC,EAAdD,CAAuBkB,GC/BvBI,cAAgB,CAC3BlB,KCFW,WAAgC,IAAvBmB,EAAsB,uDAAd,KAAOC,EAAO,uCAC1C,OAAOA,EAAOvC,MACV,INJkB,aMKd,OAAOuC,EAAOtC,UAAW,EAC7B,QACI,OAAOqC,MCGbE,EAAQC,YAAYC,EAAU,GAAKC,YAAgBC,MAEzDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAASA,GAAO,kBAAC,EAAD,OAC1BO,SAASC,cAAc,UAG3BvB,QAAQC,IAAI,gBAAgBd,8CAC5Ba,QAAQC,IAAI,qBAAsBd,gB","file":"static/js/main.2b37e517.chunk.js","sourcesContent":["import axios from 'axios'\nimport {FETCH_USER} from './types'\n\nexport const fetchUser = () => async dispatch => {\n        const res = await axios.get('/api/current_user')\n         dispatch({ type: FETCH_USER,payload: res.data})\n}\n\nexport const handleToken = (token) => async dispatch => {\n        const res = await axios.post('/api/stripe',token)\n         dispatch({ type: FETCH_USER,payload: res.data})\n}","export const FETCH_USER = 'fetch_user';","import React, { Component } from 'react'\nimport Stripecheckout from 'react-stripe-checkout'\nimport { connect } from 'react-redux'\nimport * as actions from '../actions'\n\nexport class Payments extends Component {\n    render() {\n        return (\n            <Stripecheckout\n              name ='Emaily'\n              description ='$5 for 5 credits'\n              amount = {500}\n              token = {token => this.props.handleToken(token)}\n              stripeKey = {process.env.REACT_APP_STRIPE_KEY}\n            >\n                <button className ='btn'>Add Credits</button>\n            </Stripecheckout>\n        )\n    }\n}\n\nexport default connect(null,actions)(Payments)\n\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport Payments from './Payments'\n\nexport class Header extends Component {\n    renderContent(){\n        switch(this.props.auth){\n            case null:\n                return;\n            case false:\n                return <li><a href = \"/auth/google\">log in with Google</a></li>;\n            default:\n           return [\n              <li key ='1'><Payments/></li>,\n              <li key ='3' style = {{margin :'0 10px'}}>\n                  Credits : {this.props.auth.credits}\n              </li>,\n              <li key ='2'><a href = \"/api/logout\">Logout</a></li>\n           ];\n        }\n    }\n    render() {\n        console.log(this.props);\n        return (\n            <nav>\n                <div className = 'nav-wrapper'>\n                    <Link \n                      to ={this.props.auth ? '/surveys' : '/'}\n                      className = 'left brand-logo'\n                    >\n                        Emaily\n                    </Link>\n                    <ul className = 'right'>\n                       {this.renderContent()}\n                    </ul>\n                </div>\n            </nav>\n        );;\n    }\n}\n\nfunction mapStateToProps({auth}) {\n    return {auth};\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\n\nconst Landing = () => {\n    return(\n        <div style = {{ textAlign : \"center\" }}>\n            <h1>\n                EMAILY!\n            </h1>\n            collect feedback from your user\n        </div>\n    )\n}\n\nexport default Landing;","import React , {Component} from 'react';\nimport { BrowserRouter , Route } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport * as actions from '../actions'\n\nimport Header from './Header'\nimport Landing from './Landing'\nconst Dashboard = () => <h2>Dashboard</h2>\nconst SurveyNew = () => <h2>SurveyNew</h2>\n\n\nclass App extends Component{\n    componentDidMount(){\n        this.props.fetchUser();\n    }\n\n    \n    render(){\n        return(\n            <div className = \"container\">\n                <BrowserRouter>\n                    <div>\n                        <Header/>\n                        <Route exact path = \"/\" component = { Landing }/>\n                        <Route exact path = \"/surveys\" component = {Dashboard}/>\n                        <Route path = \"/surveys/new\" component = {SurveyNew}/>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n};\n\n\nexport default connect(null, actions)(App);","import {combineReducers} from 'redux';\nimport authReducer from './authReducers';\n\nexport default combineReducers({\n    auth : authReducer\n});","import { FETCH_USER } from \"../actions/types\";\n\nexport default function(state = null , action){\n    switch(action.type){\n        case FETCH_USER:\n            return action.payload || false\n        default :\n            return state;\n    }\n}","import 'materialize-css/dist/css/materialize.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore , applyMiddleware } from 'redux';\nimport reduxThunx from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {} , applyMiddleware(reduxThunx));\n\nReactDOM.render(\n    <Provider store = {store}><App/></Provider>, \n    document.querySelector('#root')\n);\n\nconsole.log('STRIPE KEY IS',process.env.REACT_APP_STRIPE_KEY)\nconsole.log('Environment key is', process.env.NODE_ENV)\n\n"],"sourceRoot":""}